name: release
on:
  push:
    tags:
      - "*"
jobs:
  build-release:
    name: Build & Release
    runs-on: ubuntu-latest
    steps:
      - name: Check out code into the Go module directory
        uses: actions/checkout@v2

      - name: Get commits history
        # Set the PREVIOUS_TAG both on the current step and action env context
        run: |
          echo $(pwd)
          echo $(ls)
          echo $(git describe --abbrev=0 --tags $(git rev-list --tags --max-count=10))
          echo "RELEASE_TAG=${GITHUB_REF#refs/*/}" >> $GITHUB_ENV

          export PREVIOUS_TAG=$(git describe --abbrev=0 "${GITHUB_REF#refs/*/}^") && \
            echo "PREVIOUS_TAG=${PREVIOUS_TAG}" >> $GITHUB_ENV


          echo "PR_HISTORY=$(git log --abbrev-commit --grep='#' \
            --pretty=tformat:'%s%n' master...${PREVIOUS_TAG} | awk '{$1=$1};1')" >> $GITHUB_ENV

          echo "DATE=$(date +'%Y-%m-%d')" >> $GITHUB_ENV

      - name: Create Release
        id: create_release
        uses: actions/create-release@v1
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} # This token is provided by Actions, you do not need to create your own token
        with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ env.RELEASE_TAG }}
          body: |
            _${{ env.DATE }}_

            - [Changelog since ${{ env.PREVIOUS_TAG}}](#changes-since-v001)
            - [Documentation for ${{ env.RELEASE_TAG }}](#documentation-for-v002-beta)

            ## Documentation for ${{ env.RELEASE_TAG }}

            [Documentation](https://example.com/docs)

            [Examples](https://example.com/examples)

            ## Changes since ${{ env.PREVIOUS_TAG}}

            ${{ env.PR_HISTORY }}
          draft: false
          prerelease: false
